const errorResponse = require("../Helper/errorResponse");

function errorHandle(err, req, res, next){
  let error = { ...err };
  error.message = err.message || "Sai má»™t thá»© gÃ¬ Ä‘Ã³ rá»“i ðŸ¤¯";
  error.statusCode = err.statusCode || 500;
  if (err.name === "ValidationError") {
    //Nháº­p tÃªn dÆ°á»›i 3 kÃ­ tá»±
    const message = Object.values(err.errors).map((messa) => messa.message);
    error = new errorResponse(400, message);
  }
  if (err.code === 11000) {
    // Bá»‹ trÃ¹ng láº·p
    // const message = "information already exists";
    const message = "ThÃ´ng tin cÃ³ thá»ƒ Ä‘Ã£ bá»‹ tá»“n táº¡i ðŸ¤¯";
    error = new errorResponse(400, message);
  }
  if (err.name === "CastError") {
    // Nháº­p Ä‘á»‹a chá»‰ lung tung
    // const message = "not found link";
    const message = "KhÃ´ng tÃ¬m tháº¥y Ä‘á»‹a chá»‰ ðŸ¤¯";
    error = new errorResponse(404, message);
  }
  if (err.name === "JsonWebTokenError") {
    const message = "jwt malformed";
    error = new errorResponse(401, message);
  }
  if (err.name === "TokenExpiredError") {
    const message = "MÃ£ Ä‘Ã£ háº¿t háº¡n (15 phÃºt) ðŸ¤¯";
    error = new errorResponse(401, message);
  } 
  
  res.render("../Views/error.ejs", {error});
  // res.status(error.statusCode).json({
  //   err: 1,
  //   success: false,
  //   data: error.message,
  // });
}

module.exports = errorHandle;